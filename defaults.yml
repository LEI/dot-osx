---
# https://github.com/mathiasbynens/dotfiles/blob/master/.macos
# https://github.com/herrbischoff/awesome-osx-command-line

# # Set computer name (as done via System Preferences → Sharing)
# sudo scutil --set ComputerName "${COMPUTER_NAME}"
# sudo scutil --set HostName "${COMPUTER_NAME}"
# sudo scutil --set LocalHostName "${COMPUTER_NAME}"
# sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "${COMPUTER_NAME}"

# commands:
  # Set standby delay to 24 hours (default is 1 hour)
  #- sudo pmset -a standbydelay 86400

  # Disable the sound effects on boot
  #- sudo nvram SystemAudioVolume=" "

  # Restart automatically if the computer freezes
  #- sudo systemsetup -setrestartfreeze on

  # Never go into computer sleep mode
  #- sudo systemsetup -setcomputersleep Off > /dev/null

  # Set the timezone; see `sudo systemsetup -listtimezones` for other values
  #- sudo systemsetup -settimezone "Europe/Paris" > /dev/null

  # SSD Tweaks ############################################################

  # Disable local Time Machine snapshots
  #- sudo tmutil disablelocal

  # Disable hibernation (speeds up entering sleep mode)
  #- sudo pmset -a hibernatemode 0

  # Remove the sleep image file to save disk space
  #- sudo rm /private/var/vm/sleepimage
  # Create a zero-byte file instead…
  #- sudo touch /private/var/vm/sleepimage
  # …and make sure it can't be rewritten
  #- sudo chflags uchg /private/var/vm/sleepimage

  # Disable the sudden motion sensor as it's not useful for SSDs
  #- sudo pmset -a sms 0

template: defaults write {{or .Domain "NSGlobalDomain"}} {{escape .Name}} {{if .Type}}-{{.Type}} {{end}}{{escape .Value}}
defaults:
  # https://github.com/drduh/OS-X-Security-and-Privacy-Guide
  SystemConfiguration:

    # Captive portal
    Active: {domain: /Library/Preferences/SystemConfiguration/com.apple.captive.control, type: bool, value: true}

  Finder:

    # Set sidebar icon size to medium
    NSTableViewDefaultSizeMode: {type: int, value: 2}

    # Allow quitting via ⌘ + Q; doing so will also hide desktop icons
    QuitMenuItem: {domain: com.apple.finder, type: bool, value: true}

    # Disable window animations and Get Info animations
    DisableAllAnimations: {domain: com.apple.finder, type: bool, value: true}

    # Set the default location for new Finder windows
    # For other paths, use 'PfLo' and 'file:///full/path/here/'
    NewWindowTarget: {domain: com.apple.finder, value: "PfLo"} # PfDe
    # NewWindowTargetPath: {domain: com.apple.finder, value: "file://{{ $HOME }}/"}

    # Show icons for hard drives, servers, and removable media on the desktop
    ShowExternalHardDrivesOnDesktop: {domain: com.apple.finder, type: bool, value: true}
    ShowHardDrivesOnDesktop: {domain: com.apple.finder, type: bool, value: true}
    ShowMountedServersOnDesktop: {domain: com.apple.finder, type: bool, value: true}
    ShowRemovableMediaOnDesktop: {domain: com.apple.finder, type: bool, value: true}

    # Show hidden files by default
    AppleShowAllFiles: {domain: com.apple.finder, type: bool, value: true}

    # Show all filename extensions
    AppleShowAllExtensions: {type: bool, value: true}

    # Show status bar
    ShowStatusBar: {domain: com.apple.finder, type: bool, value: true}

    # Show path bar
    ShowPathBar: {domain: com.apple.finder, type: bool, value: true}

    # Display full POSIX path as Finder window title
    _FXShowPosixPathInTitle: {domain: com.apple.finder, type: bool, value: true}

    # When performing a search, search the current folder by default
    FXDefaultSearchScope: {domain: com.apple.finder, value: "SCcf" }

    # Disable the warning when changing a file extension
    FXEnableExtensionChangeWarning: {domain: com.apple.finder, type: bool, value: false}

    # Enable spring loading for directories
    com.apple.springing.enabled: {type: bool, value: true}

    # Remove the spring loading delay for directories
    com.apple.springing.delay: {type: float, value: 0}

    # Avoid creating .DS_Store files on network volumes
    DSDontWriteNetworkStores: {domain: com.apple.desktopservices, type: bool, value: true}

    # Disable creation of metadata files on USB volumes
    DSDontWriteUSBStores: {domain: com.apple.desktopservices, type: bool, value: true}

    # Disable disk image verification
    skip-verify: {domain: com.apple.frameworks.diskimages, type: bool, value: true}
    skip-verify-locked: {domain: com.apple.frameworks.diskimages, type: bool, value: true}
    skip-verify-remote: {domain: com.apple.frameworks.diskimages, type: bool, value: true}

    # Automatically open a new Finder window when a volume is mounted
    auto-open-ro-root: {domain: com.apple.frameworks.diskimages, type: bool, value: true}
    auto-open-rw-root: {domain: com.apple.frameworks.diskimages, type: bool, value: true}
    OpenWindowForNewRemovableDisk : {domain: com.apple.finder, type: bool, value: true}

    # Show item info near icons on the desktop and in other icon views
    # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

    # Show item info to the right of the icons on the desktop
    # /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

    # Enable snap-to-grid for icons on the desktop and in other icon views
    # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

    # # Increase grid spacing for icons on the desktop and in other icon views
    # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

    # # Increase the size of icons on the desktop and in other icon views
    # /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist
    # /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist

    # Define default view in all Finder windows
    # Flwv: Cover Flow View
    # Nlsv: List View
    # clmv: Column View (default?)
    # icnv: Icon View
    FXPreferredViewStyle: {domain: com.apple.finder, value: "Nlsv"}

    # Disable the warning before emptying the Trash
    WarnOnEmptyTrash: {domain: com.apple.finder, type: bool, value: false}

    # Enable AirDrop over Ethernet and on unsupported Macs running Lion
    BrowseAllInterfaces: {domain: com.apple.NetworkBrowser, type: bool, value: true}

    # Enable the MacBook Air SuperDrive on any Mac
    # sudo nvram boot-args="mbasd=1"

    # Show the ~/Library folder
    # chflags nohidden ~/Library

    # Remove Dropbox's green checkmark icons in Finder
    # file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
    # [ -e "${file}" ] && mv -f "${file}" "${file}.bak"

    # Expand the following File Info panes:
    # "General", "Open with", and "Sharing & Permissions"
    # defaults write com.apple.finder FXInfoPanesExpanded -dict \
    # General -bool true \
    # OpenWith -bool true \
    # Privileges -bool true
    #
    FXInfoPanesExpanded:
      domain: com.apple.finder
      type: dict # FIXME no dict type?
      value: {General: true, OpenWith: true, Privileges: true}

  SystemUIServer:

    # Disable menu bar transparency
    # defaults write NSGlobalDomain AppleEnableMenuBarTransparency -bool false

    # Disable transparency in the menu bar
    reduceTransparency: {domain: com.apple.universalaccess, type: bool, value: true}

    # dontAutoLoad: # FIXME
    #   # domain: ~/Library/Preferences/ByHost/com.apple.systemuiserver.*
    #   domain: com.apple.systemuiserver
    #   type: array
    #   # array_add: true
    #   value:
    #     - /System/Library/CoreServices/Menu Extras/TimeMachine.menu
    #     - /System/Library/CoreServices/Menu Extras/Volume.menu
    #     - /System/Library/CoreServices/Menu Extras/User.menu

    # menuExtras: # FIXME
    #   domain: com.apple.systemuiserver
    #   type: array
    #   value:
    #     - /System/Library/CoreServices/Menu Extras/Bluetooth.menu
    #     - /System/Library/CoreServices/Menu Extras/AirPort.menu
    #     - /System/Library/CoreServices/Menu Extras/Battery.menu
    #     - /System/Library/CoreServices/Menu Extras/Clock.menu

    # AppleHighlightColor:
    #   # domain: NSGlobalDomain
    #   type: string
    #   value: "0.764700 0.976500 0.568600" # Green

    # isinstance() arg 2 must be a class, type, or tuple of classes and types
    # https://github.com/ansible/ansible-modules-extras/issues/1742
    #
    # # Show remaining battery percentage
    # ShowPercent: {domain: com.apple.menuextra.battery, value: YES}
    # # Show remaining battery time
    # ShowTime: {domain: com.apple.menuextra.battery, value: NO}

    AppleShowScrollBars: {domain: NSGlobalDomain, type: string, value: WhenScrolling}
    # WhenScrolling, Automatic or Always

    # Disable the over-the-top focus ring animation
    NSUseAnimatedFocusRing: {type: bool, value: false}

    # Increase window resize speed for Cocoa applications
    NSWindowResizeTime: {type: float, value: 0.001}

    # Expand save panel by default
    NSNavPanelExpandedStateForSaveMode: {type: bool, value: true}
    NSNavPanelExpandedStateForSaveMode2: {type: bool, value: true}

    # Expand print panel by default
    PMPrintingExpandedStateForPrint: {type: bool, value: true}
    PMPrintingExpandedStateForPrint2: {type: bool, value: true}

    # Save to disk (not to iCloud) by default
    NSDocumentSaveNewDocumentsToCloud: {type: bool, value: false}

    # Automatically quit printer app once the print jobs complete
    Quit When Finished: {domain: com.apple.print.PrintingPrefs, type: bool, value: true}
    # Disable the "Are you sure you want to open this application?" dialog
    LSQuarantine: {domain: com.apple.LaunchServices, type: bool, value: false}

    # Remove duplicates in the "Open With" menu (also see 'lscleanup' alias)
    # /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user

    # Display ASCII control characters using caret notation in standard text views
    # Try e.g. 'cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt'
    NSTextShowsControlCharacters: {type: bool, value: true}

    # Disable Resume system-wide
    NSQuitAlwaysKeepsWindows: {domain: com.apple.systempreferences, type: bool, value: false}

    # Disable automatic termination of inactive apps
    NSDisableAutomaticTermination: {type: bool, value: true}

    # Disable the crash reporter
    DialogType: {domain: com.apple.CrashReporter, value: "none"}

    # Set Help Viewer windows to non-floating mode
    DevMode: {domain: com.apple.helpviewer, type: bool, value: true}

    # Fix for the ancient UTF-8 bug in QuickLook (https://mths.be/bbo)
    # Commented out, as this is known to cause problems in various Adobe apps :(
    # See https://github.com/mathiasbynens/dotfiles/issues/237
    # echo "0x08000100:0" > ~/.CFUserTextEncoding

    # Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window
    AdminHostInfo: {sudo: true, domain: /Library/Preferences/com.apple.loginwindow, value: HostName}

    # Check for software updates daily, not just once per week
    ScheduleFrequency: {domain: com.apple.SoftwareUpdate, type: int, value: 1}

    # Disable Notification Center and remove the menu bar icon
    # if [[ "${OSX_DISABLE_NOTIFICATION_CENTER-}" = true ]]; then
    #     launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null
    # fi

    # Disable smart quotes as they're annoying when typing code
    NSAutomaticQuoteSubstitutionEnabled: {type: bool, value: false}

    # Disable smart dashes as they're annoying when typing code
    NSAutomaticDashSubstitutionEnabled: {type: bool, value: false}

    # Set a custom wallpaper image. 'DefaultDesktop.jpg' is already a symlink, and
    # all wallpapers are in '/Library/Desktop Pictures/'. The default is 'Wave.jpg'.
    # rm -rf ~/Library/Application Support/Dock/desktoppicture.db
    # sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
    # sudo ln -s /path/to/your/image /System/Library/CoreServices/DefaultDesktop.jpg

    # Trackpad, mouse, keyboard, bluetooth and input ##########################

    # Trackpad: enable tap to click for this user and for the login screen
    Clicking: {domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, type: bool, value: true}
    # defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
    com.apple.mouse.tapBehavior: {type: int, value: 1} #, host: currentHost}

    # Trackpad: map bottom right corner to right-click
    # defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
    # defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
    # defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
    # defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

    # Enable or disable "natural" (Lion-style) scrolling
    com.apple.swipescrolldirection: {type: bool, value: "true"} # TODO {{ osx_natural_scroll }}

    # Increase sound quality for Bluetooth headphones/headsets
    Apple Bitpool Min (editable): {domain: com.apple.BluetoothAudioAgent, type: int, value: 40}

    # Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)
    AppleKeyboardUIMode: {type: int, value: 3}

    # Use scroll gesture with the Ctrl (^) modifier key to zoom
    closeViewScrollWheelToggle: {domain: com.apple.universalaccess, type: bool, value: true}
    HIDScrollZoomModifierMask: {domain: com.apple.universalaccess, type: int, value: 262144}
    # Follow the keyboard focus while zoomed in
    closeViewZoomFollowsFocus: {domain: com.apple.universalaccess, type: bool, value: true}

    # Disable press-and-hold for keys in favor of key repeat
    ApplePressAndHoldEnable: {type: bool, value: false}

    # Set a shorter delay until key repeat
    InitialKeyRepeat: {type: float, value: 12}

    # Set a blazingly fast keyboard repeat rate
    KeyRepeat: {type: float, value: 1.5}

    # Set language and text formats
    # Note: if you're in the US, replace 'EUR' with 'USD', 'Centimeters' with
    # 'Inches', 'en_GB' with 'en_US', and 'true' with 'false'.
    # AppleLanguages: {type: array, value: [en, fr]} # FIXME
    AppleLocale: {type: string, value: "en_GB@currency=EUR"}
    AppleMeasurementUnits: {type: string, value: "Centimeters"}
    AppleMetricUnits: {type: bool, value: true}

    # Disable auto-correct
    NSAutomaticSpellingCorrectionEnabled: {type: bool, value: false}

    # Stop iTunes from responding to the keyboard media keys
    # launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null

    # Disable Dashboard
    mcx-disabled: {domain: com.apple.dashboard, type: bool, value: true}

    # Enable Dashboard dev mode (allows keeping widgets on the desktop)
    devmode: {domain: com.apple.dashboard, type: bool, value: true}

    # Screen ##################################################################

    # Require password immediately after sleep or screen saver begins
    askForPassword: {domain: com.apple.screensaver, type: int, value: 1}
    askForPasswordDelay: {domain: com.apple.screensaver, type: int, value: "0"} # TODO {{ osx_lock_delay }}

    # Save screenshots to the desktop
    # location: {domain: com.apple.screencapture, value: "{{ $HOME }}/Desktop"}

    # Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
    type: {domain: com.apple.screencapture, value: "png"}

    # Disable shadow in screenshots
    disable-shadow: {domain: com.apple.screencapture, type: bool, value: true}

    # Enable subpixel font rendering on non-Apple LCDs
    AppleFontSmoothing: {type: int, value: 2}

    # Enable HiDPI display modes (requires restart)
    DisplayResolutionEnabled: {sudo: true, domain: /Library/Preferences/com.apple.windowserver, type: bool, value: true}

  Dock:

    # Enable highlight hover effect for the grid view of a stack (Dock)
    mouse-over-hilite-stack: {domain: com.apple.dock, type: bool, value: true}

    # Set the icon size of Dock items
    # FIXME int/float?
    # tilesize: {domain: com.apple.dock, type: int, value: 48}

    # Change minimize/maximize window effect
    mineffect: {domain: com.apple.dock, value: "scale"}

    # Minimize windows into their application's icon
    minimize-to-application: {domain: com.apple.dock, type: bool, value: true}

    # Enable spring loading for all Dock items
    enable-spring-load-actions-on-all-items: {domain: com.apple.dock, type: bool, value: true}

    # Show indicator lights for open applications in the Dock
    show-process-indicators: {domain: com.apple.dock, type: bool, value: true}

    # Wipe all (default) app icons from the Dock
    # This is only really useful when setting up a new Mac, or if you don't use
    # the Dock to launch apps.
    # TODO: osx_dock_apps
    # persistent-apps: {domain: com.apple.dock, type: array, value: []}

    # Show only open applications in the Dock
    # static-only: {domain: com.apple.dock, type: bool, value: true}

    # Don't animate opening applications from the Dock
    launchanim: {domain: com.apple.dock, type: bool, value: false}

    # Speed up Mission Control animations
    expose-animation-duration: {domain: com.apple.dock, type: float, value: 0.1}

    # Don't group windows by application in Mission Control
    # (i.e. use the old Exposé behavior instead)
    expose-group-by-apps: {domain: com.apple.dock, type: bool, value: false}

    # Don't show Dashboard as a Space
    dashboard-in-overlay: {domain: com.apple.dock, type: bool, value: true}

    # Don't automatically rearrange Spaces based on most recent use
    mru-spaces: {domain: com.apple.dock, type: bool, value: false}

    # Remove the auto-hiding Dock delay
    autohide-delay: {domain: com.apple.dock, type: float, value: 0}
    # Remove the animation when hiding/showing the Dock
    autohide-time-modifier: {domain: com.apple.dock, type: float, value: 0}

    # Automatically hide and show the Dock
    autohide: {domain: com.apple.dock, type: bool, value: true}

    # Make Dock icons of hidden applications translucent
    showhidden: {domain: com.apple.dock, type: bool, value: true}

    # Disable the Launchpad gesture (pinch with thumb and three fingers)
    showLaunchpadGestureEnabled: {domain: com.apple.dock, type: int, value: 0}

    # Reset Launchpad, but keep the desktop wallpaper intact
    # find "{{ $HOME }}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete

    # Add iOS & Watch Simulator to Launchpad
    # sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"
    # sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app" "/Applications/Simulator (Watch).app"

    # Add a spacer to the left side of the Dock (where the applications are)
    # defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'

    # Add a spacer to the right side of the Dock (where the Trash is)
    # defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'

    # Hot corners
    # Possible values:
    #  0: no-op
    #  2: Mission Control
    #  3: Show application windows
    #  4: Desktop
    #  5: Start screen saver
    #  6: Disable screen saver
    #  7: Dashboard
    # 10: Put display to sleep
    # 11: Launchpad
    # 12: Notification Center

    # Top left screen corner → Mission Control
    wvous-tl-corner: {domain: com.apple.dock, type: int, value: 2}
    wvous-tl-modifier: {domain: com.apple.dock, type: int, value: 0}

    # Top right screen corner → Desktop
    wvous-tr-corner: {domain: com.apple.dock, type: int, value: 4}
    wvous-tr-modifier: {domain: com.apple.dock, type: int, value: 0}

    # Bottom left screen corner → Start screen saver
    # wvous-bl-corner: {domain: com.apple.dock, type: int, value: 5}
    # wvous-bl-modifier: {domain: com.apple.dock, type: int, value: 0}

  Safari: # & WebKit

    # Privacy: don't send search queries to Apple
    UniversalSearchEnabled: {domain: com.apple.Safari, type: bool, value: false}
    SuppressSearchSuggestions: {domain: com.apple.Safari, type: bool, value: true}

    # Press Tab to highlight each item on a web page
    WebKitTabToLinksPreferenceKey: {domain: com.apple.Safari, type: bool, value: true}
    com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks: {domain: com.apple.Safari, type: bool, value: true}

    # Show the full URL in the address bar (note: this still hides the scheme)
    ShowFullURLInSmartSearchField: {domain: com.apple.Safari, type: bool, value: true}

    # Set Safari's home page to 'about:blank' for faster loading
    HomePage: {domain: com.apple.Safari, value: "about:blank"}

    # Prevent Safari from opening 'safe' files automatically after downloading
    AutoOpenSafeDownload: {domain: com.apple.Safari, type: bool, value: false}

    # Allow hitting the Backspace key to go to the previous page in history
    # defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true

    # Hide Safari's bookmarks bar by default
    ShowFavoritesBar: {domain: com.apple.Safari, type: bool, value: false}

    # Hide Safari's sidebar in Top Sites
    ShowSidebarInTopSites: {domain: com.apple.Safari, type: bool, value: false}

    # Disable Safari's thumbnail cache for History and Top Sites
    DebugSnapshotsUpdatePolicy: {domain: com.apple.Safari, type: int, value: 2}
    # defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2

    # Enable Safari's debug menu
    IncludeInternalDebugMenu: {domain: com.apple.Safari, type: bool, value: true}

    # Make Safari's search banners default to Contains instead of Starts With
    FindOnPageMatchesWordStartsOnly: {domain: com.apple.Safari, type: bool, value: false}

    # Remove useless icons from Safari's bookmarks bar
    # FIXME: Expected value to be an array?
    #ProxiesInBookmarksBar: {domain: com.apple.Safari, type: array, value: []}

    # Enable the Develop menu and the Web Inspector in Safari
    IncludeDevelopMenu: {domain: com.apple.Safari, type: bool, value: true}
    WebKitDeveloperExtrasEnabledPreferenceKey: {domain: com.apple.Safari, type: bool, value: true}
    com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled: {domain: com.apple.Safari, type: bool, value: true}

    # Add a context menu item for showing the Web Inspector in web views
    WebKitDeveloperExtras: {type: bool, value: true}

  Mail:

    # Disable send and reply animations in Mail.app
    DisableReplyAnimations: {domain: com.apple.mail, type: bool, value: true}
    DisableSendAnimations: {domain: com.apple.mail, type: bool, value: true}

    # Copy email addresses as 'foo@example.com' instead of 'Foo Bar <foo@example.com>' in Mail.app
    AddressesIncludeNameOnPasteboard: {domain: com.apple.mail, type: bool, value: false}

    # Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app
    # defaults write com.apple.mail NSUserKeyEquivalents -dict-add "Send" -string "@\\U21a9"

    # Display emails in threaded mode, sorted by date (oldest at the top)
    # defaults write com.apple.mail DraftsViewerAttributes -dict-add "DisplayInThreadedMode" -string "yes"
    # defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortedDescending" -string "yes"
    # defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortOrder" -string "received-date"

    # Disable inline attachments (just show the icons)
    DisableInlineAttachmentViewing: {domain: com.apple.mail, type: bool, value: true}

    # Disable automatic spell checking
    SpellCheckingBehavior: {domain: com.apple.mail, value: "NoSpellCheckingEnabled"}

  # Spotlight

    # Hide Spotlight tray-icon (and subsequent helper)
    # sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search

    # Disable Spotlight indexing for any volume that gets mounted and has not yet
    # been indexed before.
    # Use 'sudo mdutil -i off "/Volumes/foo"' to stop indexing any volume.
    # sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"

    # Change indexing order and disable some search results
    # Yosemite-specific search results (remove them if you are using OS X 10.9 or older):
    # 	MENU_DEFINITION
    # 	MENU_CONVERSION
    # 	MENU_EXPRESSION
    # 	MENU_SPOTLIGHT_SUGGESTIONS (send search queries to Apple)
    # 	MENU_WEBSEARCH             (send search queries to Apple)
    # 	MENU_OTHER
    # defaults write com.apple.spotlight orderedItems -array \
    #   '{"enabled" = 1;"name" = "APPLICATIONS";}' \
    #   '{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
    #   '{"enabled" = 1;"name" = "DIRECTORIES";}' \
    #   '{"enabled" = 1;"name" = "PDF";}' \
    #   '{"enabled" = 1;"name" = "FONTS";}' \
    #   '{"enabled" = 0;"name" = "DOCUMENTS";}' \
    #   '{"enabled" = 0;"name" = "MESSAGES";}' \
    #   '{"enabled" = 0;"name" = "CONTACT";}' \
    #   '{"enabled" = 0;"name" = "EVENT_TODO";}' \
    #   '{"enabled" = 0;"name" = "IMAGES";}' \
    #   '{"enabled" = 0;"name" = "BOOKMARKS";}' \
    #   '{"enabled" = 0;"name" = "MUSIC";}' \
    #   '{"enabled" = 0;"name" = "MOVIES";}' \
    #   '{"enabled" = 0;"name" = "PRESENTATIONS";}' \
    #   '{"enabled" = 0;"name" = "SPREADSHEETS";}' \
    #   '{"enabled" = 0;"name" = "SOURCE";}' \
    #   '{"enabled" = 0;"name" = "MENU_DEFINITION";}' \
    #   '{"enabled" = 0;"name" = "MENU_OTHER";}' \
    #   '{"enabled" = 0;"name" = "MENU_CONVERSION";}' \
    #   '{"enabled" = 0;"name" = "MENU_EXPRESSION";}' \
    #   '{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
    #   '{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}'

    # Load new settings before rebuilding the index
    # killall mds > /dev/null 2>&1

    # Make sure indexing is enabled for the main volume
    # sudo mdutil -i on / > /dev/null

    # Rebuild the index from scratch
    # sudo mdutil -E / > /dev/null

  Terminal:

    # Only use UTF-8 in Terminal.app
    # FIXME: Expected value to be an array?
    #StringEncodings: {domain: com.apple.terminal, type: array, value: ["4"]}

    # Enable "focus follows mouse" for Terminal.app and all X11 apps
    # i.e. hover over a window and start typing in it without clicking first
    FocusFollowMouse: {domain: com.apple.terminal, type: bool, value: true}
    wm_ffm: {domain: org.x.X11, type: bool, value: true}

    # Don't display the annoying prompt when quitting iTerm
    # defaults write com.googlecode.iterm2 PromptOnQuit -bool false

  Time Machine:

    # Prevent Time Machine from prompting to use new hard drives as backup volume
    DoNotOfferNewDisksForBackup: {domain: com.apple.TimeMachine, type: bool, value: true}

    # Disable local Time Machine backups
    # hash tmutil &> /dev/null && sudo tmutil disablelocal

  Activity Monitor:

    # Show the main window when launching Activity Monitor
    OpenMainWindow: {domain: com.apple.ActivityMonitor, type: bool, value: true}

    # Visualize CPU usage in the Activity Monitor Dock icon
    IconType: {domain: com.apple.ActivityMonitor, type: int, value: 5}

    # Show all processes in Activity Monitor
    ShowCategory: {domain: com.apple.ActivityMonitor, type: int, value: 0}

    # Sort Activity Monitor results by CPU usage
    SortColumn: {domain: com.apple.ActivityMonitor, value: "CPUUsage"}
    SortDirection: {domain: com.apple.ActivityMonitor, type: int, value: 0}

  Address Book:

    # Enable the debug menu in Address Book
    ABShowDebugMenu: {domain: com.apple.addressbook, type: bool, value: true}

  Calendar:

    # Enable the debug menu in iCal (pre-10.8)
    IncludeDebugMenu: {domain: com.apple.iCal, type: bool, value: true}

  TextEdit:

    # Use plain text mode for new TextEdit documents
    RichText: {domain: com.apple.TextEdit, type: int, value: 0}
    # Open and save files as UTF-8 in TextEdit
    PlainTextEncoding: {domain: com.apple.TextEdit, type: int, value: 4}
    PlainTextEncodingForWrite: {domain: com.apple.TextEdit, type: int, value: 4}

  Disk Utility: # killall?

    # Enable the debug menu in Disk Utility
    DUDebugMenuEnabled: {domain: com.apple.DiskUtility, type: bool, value: true}
    advanced-image-options: {domain: com.apple.DiskUtility, type: bool, value: true}

  App Store: # killall?

    # Enable the WebKit Developer Tools in the Mac App Store
    WebKitDeveloperExtras: {domain: com.apple.appstore, type: bool, value: true}

    # Enable Debug Menu in the Mac App Store
    ShowDebugMenu: {domain: com.apple.appstore, type: bool, value: true}

  Photos:

    # Prevent Photos from opening automatically when devices are plugged in
    disableHotPlug: {domain: com.apple.ImageCapture, type: bool, value: true}

  # Messages:

    # Disable automatic emoji substitution (i.e. use plain text smileys)
    # defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -bool false

    # # Disable smart quotes as it's annoying for messages that contain code
    # defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false

    # # Disable continuous spell checking
    # defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false

  # Google Chrome:
  # Google Chrome Canary:

    # Allow installing user scripts via GitHub Gist or Userscripts.org
    # ExtensionInstallSources: {domain: com.google.Chrome, type: array, value: ["https://gist.githubusercontent.com/", "http://userscripts.org/*"]}
    # defaults write com.google.Chrome ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*"
    # defaults write com.google.Chrome.canary ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*"

    # Disable the all too sensitive backswipe on trackpads
    # defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
    # defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false

    # Disable the all too sensitive backswipe on Magic Mouse
    # defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false
    # defaults write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false

    # Use the system-native print preview dialog
    # DisablePrintPreview: {domain: com.google.Chrome, type: bool, value: true}
    # defaults write com.google.Chrome DisablePrintPreview -bool true
    # defaults write com.google.Chrome.canary DisablePrintPreview -bool true

    # Expand the print dialog by default
    # PMPrintingExpandedStateForPrint2: {domain: com.google.Chrome, type: bool, value: true}
    # defaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true

  # GPGMail 2

    # Disable signing emails by default
    # defaults write ~/Library/Preferences/org.gpgtools.gpgmail SignNewEmailsByDefault -bool false

  Opera:

    # Expand the print dialog by default
    PMPrintingExpandedStateForPrint2: {domain: com.operasoftware.Opera, type: bool, value: true}
    # PMPrintingExpandedStateForPrint2: {domain: com.operasoftware.OperaDeveloper, type: bool, value: true}

  Transmission:

    # Use '~/Documents/Torrents' to store incomplete downloads
    UseIncompleteDownloadFolder: {domain: org.m0k.transmission, type: bool, value: true}
    # IncompleteDownloadFolder: {domain: org.m0k.transmission, value: "{{ $HOME }}/Documents/Torrents"}

    # Don't prompt for confirmation before downloading
    DownloadAsk: {domain: org.m0k.transmission, type: bool, value: false}

    # Trash original torrent files
    DeleteOriginalTorrent: {domain: org.m0k.transmission, type: bool, value: true}

    # Hide the donate message
    WarningDonate: {domain: org.m0k.transmission, type: bool, value: false}
    # Hide the legal disclaimer
    WarningLegal: {domain: org.m0k.transmission, type: bool, value: false}

  # Twitter:

    # # Disable smart quotes as it's annoying for code tweets
    # defaults write com.twitter.twitter-mac AutomaticQuoteSubstitutionEnabled -bool false

    # # Show the app window when clicking the menu bar icon
    # defaults write com.twitter.twitter-mac MenuItemBehavior -int 1

    # # Enable the hidden 'Develop' menu
    # defaults write com.twitter.twitter-mac ShowDevelopMenu -bool true

    # # Open links in the background
    # defaults write com.twitter.twitter-mac openLinksInBackground -bool true

    # # Allow closing the 'new tweet' window by pressing 'Esc'
    # defaults write com.twitter.twitter-mac ESCClosesComposeWindow -bool true

    # # Show full names rather than Twitter handles
    # defaults write com.twitter.twitter-mac ShowFullNames -bool true

    # # Hide the app in the background if it's not the front-most window
    # defaults write com.twitter.twitter-mac HideInBackground -bool true
